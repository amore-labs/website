---
title: "People"
echo: false
jupyter: python3
section-divs: false
---

```{python}
import yaml
from IPython.display import display, Markdown, HTML
from string import Template

def make_person_description(name, attrs):
    s = """
    <div class="container">
        <div class="image-container">
            <img src="$picture">
        </div>
        <div class="text-container">
            <div class="text">
                $description
            </div>
            <div class="social-icons">
                $mail
                $linkedin
                $scholar
                $personal
            </div>
        </div>
    </div>
    """
    template = Template(s)
    description = "<p>" + attrs["description"] + "</p>"
    description = description.replace("<name>", "<b>" + name + "</b>") # Add bold name
    picture = attrs.get("picture", None)
    mail = f'<a href="mailto:{attrs.get("mail")}"><i class="bi bi-envelope-fill fs-4" style="color: red;"></i></a>' if attrs.get("mail") else ""
    linkedin = f'<a href="{attrs.get("linkedin")}"><i class="bi bi-linkedin fs-4"></i></a>' if attrs.get("linkedin") else ""
    scholar = f'<a href="{attrs.get("scholar")}"><i class="bi bi-mortarboard-fill fs-4" style="color: green;"></i></a>' if attrs.get("scholar") else ""
    personal = f'<a href="{attrs.get("personal")}"><i class="bi bi-globe fs-4" style="color: orange;"></i></a>' if attrs.get("personal") else ""

    return template.substitute(picture = picture, description = description, mail = mail, linkedin = linkedin, scholar = scholar, personal = personal)


yaml_data = yaml.safe_load(open("people.yml"))
 
positions = {
    "Permanent researchers": "permanent",
    "Research engineers": "engineer",
    "Lecturers": "lecturer",
    "Postdocs": "postdoc",
    "PhD students": "phd",
    "Alumni and visitors": "alumnus"
}

for long_pos, short_pos in positions.items():
    display(Markdown(f"## {long_pos}"))
    for name, attrs in yaml_data.items():
        if attrs["position"] == short_pos:
            display(HTML(make_person_description(name, attrs)))
```